version: 2
jobs:
  components:
    docker:
      - image: circleci/node:10.15-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install yarn
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.15.2
            # Reference:
            # https://circleci.com/docs/2.0/env-vars/#example-configuration-of-environment-variables
            echo 'export PATH="$HOME/.yarn/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: yarn install --offline --frozen-lockfile
      - run:
          name: Build packages
          command: yarn lerna run build --scope=carbon-components --include-filtered-dependencies
      - run:
          name: Run Continuous Integration checks
          command: yarn lerna run ci-check --scope carbon-components

  elements:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install yarn
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.15.2
            # Reference:
            # https://circleci.com/docs/2.0/env-vars/#example-configuration-of-environment-variables
            echo 'export PATH="$HOME/.yarn/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: yarn install --offline --frozen-lockfile
      - run:
          name: Build packages
          command: yarn build
      - run:
          name: Run Continuous Integration checks
          command: yarn ci-check

  react:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install yarn
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.15.2
            # Reference:
            # https://circleci.com/docs/2.0/env-vars/#example-configuration-of-environment-variables
            echo 'export PATH=$HOME/.yarn/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: yarn install --offline --frozen-lockfile
      - run:
          name: Build packages
          command: yarn lerna run build --scope=carbon-components-react --include-filtered-dependencies
      - run:
          name: Run Continuous Integration checks
          command: yarn lerna run ci-check --scope carbon-components-react
      - deploy:
          name: deploy to IBM Cloud
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              # Install `ibmcloud` CLI
              curl -fsSL https://clis.ng.bluemix.net/install/linux | sh

              # Login and push staging manifest
              ibmcloud login \
                --apikey $CLOUD_API_KEY \
                -a https://api.ng.bluemix.net \
                -o carbon-design-system

              ibmcloud target -s production

              ibmcloud cf add-plugin-repo CF-Community https://plugins.cloudfoundry.org
              ibmcloud cf install-plugin blue-green-deploy -f -r CF-Community

              # Default storybook build
              cd packages/react
              yarn build-storybook
              ibmcloud cf blue-green-deploy carbon-storybook \
                -f manifest.yml \
                --delete-old-apps
            fi

workflows:
  version: 2
  main:
    jobs:
      - components
      - elements
      - react
