//
// Copyright IBM Corp. 2016, 2018
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

@use '../../css--reset' as *;
@use '../../helper-mixins' as *;
@use '../../layout';
@use '../../motion' as *;
@use '../../settings' as *;
@use '../../theme' as *;
@use '../../type';
@use 'mixins' as *;

// @import '../../globals/scss/vars';
// @import '../../globals/scss/helper-mixins';
// @import '../../globals/scss/layout';
// @import '../../globals/scss/tooltip';
// @import '../../globals/scss/vendor/@carbon/elements/scss/import-once/import-once';
// @import '../../globals/scss/css--reset';

/// Tooltip styles
/// @access private
/// @group tooltip
@mixin tooltip {
  // Caret's original size was 13.75px square
  $caret-size: layout.rem(6.875px);

  .#{$prefix}--tooltip__label {
    @include type.type-style('label-01');

    display: inline-flex;
    align-items: center;
    color: $text-02;

    &:focus {
      @include focus-outline('border');
    }
  }

  .#{$prefix}--tooltip__trigger svg {
    fill: $icon-02;

    // Windows, Firefox HCM Fix
    @media screen and (-ms-high-contrast: active),
      screen and (prefers-contrast) {
      // `ButtonText` is a CSS2 system color to help improve colors in HCM
      fill: ButtonText;
    }
  }

  .#{$prefix}--tooltip__trigger:not(.#{$prefix}--btn--icon-only) {
    @include button-reset($width: false);

    display: inline-flex;
    align-items: center;
    font-size: 1rem;
    cursor: pointer;

    &:focus {
      @include focus-outline('border');

      fill: $hover-primary;
    }
  }

  .#{$prefix}--tooltip__label .#{$prefix}--tooltip__trigger {
    // Override `margin: 0` from button-reset mixin
    margin-left: $spacing-03;
  }

  .#{$prefix}--tooltip__label--bold {
    font-weight: 600;
  }

  .#{$prefix}--tooltip {
    @include box-shadow;
    @include reset;

    position: absolute;
    z-index: z('floating');
    display: none;
    min-width: layout.rem(208px);
    max-width: layout.rem(288px);
    margin-top: $spacing-02;
    padding: $spacing-05;
    color: $inverse-01;
    word-wrap: break-word;
    background: $inverse-02;
    border-radius: layout.rem(2px);

    // Windows, Firefox HCM Fix
    @media screen and (-ms-high-contrast: active),
      screen and (prefers-contrast) {
      // `ButtonText` is a CSS2 system color to help improve colors in HCM
      border: 1px solid transparent;
    }

    // @todo this can be deprecated in v11 since focus should always be on the content container not the tooltip
    &:focus {
      outline: 0;
      box-shadow: inset 0 0 0 1px $inverse-02, inset 0 0 0 2px $ui-background;
    }

    &.#{$prefix}--tooltip--top.#{$prefix}--tooltip--align-start,
    &.#{$prefix}--tooltip--bottom.#{$prefix}--tooltip--align-start {
      transform: translate(calc(50% - 22px), 0);

      .#{$prefix}--tooltip__caret {
        margin-left: 15px;
      }
    }

    &.#{$prefix}--tooltip--top.#{$prefix}--tooltip--align-end,
    &.#{$prefix}--tooltip--bottom.#{$prefix}--tooltip--align-end {
      transform: translate(calc(22px - 50%), 0);

      .#{$prefix}--tooltip__caret {
        margin-right: 15px;
      }
    }

    &.#{$prefix}--tooltip--left.#{$prefix}--tooltip--align-start {
      transform: translate(0, calc(-15px + 50%));

      .#{$prefix}--tooltip__caret {
        top: 14px;
      }
    }

    &.#{$prefix}--tooltip--left.#{$prefix}--tooltip--align-end {
      transform: translate(0, calc(31px - 50%));

      .#{$prefix}--tooltip__caret {
        top: initial;
        bottom: 25px;
      }
    }

    &.#{$prefix}--tooltip--right.#{$prefix}--tooltip--align-start {
      transform: translate(0, calc(-26px + 50%));

      .#{$prefix}--tooltip__caret {
        top: 26px;
      }
    }

    &.#{$prefix}--tooltip--right.#{$prefix}--tooltip--align-end {
      transform: translate(0, calc(20px - 50%));

      .#{$prefix}--tooltip__caret {
        top: initial;
        bottom: 12px;
      }
    }

    p {
      @include type.type-style('body-short-01');
    }

    button {
      padding-right: $spacing-07;
    }

    .#{$prefix}--btn:focus {
      border-color: $inverse-focus-ui;
      outline-color: $inverse-02;
    }

    .#{$prefix}--link {
      color: $inverse-link;
      font-size: layout.rem(14px);

      &:focus {
        outline: 1px solid $inverse-focus-ui;
        outline-offset: 2px;
      }

      &:active,
      &:active:visited,
      &:active:visited:hover {
        color: $inverse-01;
      }

      &:visited {
        color: $inverse-link;
      }
    }

    // Tooltips need to be click focusable but not sequentially focusable so the user can click within
    // the tooltip and not have it close. Because the element is not actionable it does not need
    // to have a visible focus indicator (OK'd by IBMa)
    .#{$prefix}--tooltip__content[tabindex='-1']:focus {
      outline: none;
    }

    .#{$prefix}--tooltip__caret {
      position: absolute;
      top: calc(#{$caret-size * (-1)} + 1px);
      right: 0;
      left: 0;
      width: 0;
      height: 0;
      margin: 0 auto;
      border-right: $caret-size solid transparent;
      border-bottom: $caret-size solid $inverse-02;
      border-left: $caret-size solid transparent;
      content: '';
    }

    .#{$prefix}--tooltip__footer {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-top: 1rem;
    }

    &[data-floating-menu-direction='left'] {
      .#{$prefix}--tooltip__caret {
        top: 50%;
        // left position has an additional space between caret and tooltip
        right: calc(#{$caret-size * (-1)} + 1px);
        left: auto;
        transform: rotate(90deg) translate(50%, -50%);
      }
    }

    &[data-floating-menu-direction='top'] {
      .#{$prefix}--tooltip__caret {
        top: auto;
        bottom: calc(#{$caret-size * (-1)} + 1px);
        transform: rotate(180deg);
      }
    }

    &[data-floating-menu-direction='right'] {
      .#{$prefix}--tooltip__caret {
        top: 50%;
        right: auto;
        left: calc(#{$caret-size * (-1)} + 1px);
        transform: rotate(270deg) translate(50%, -50%);
      }
    }
  }

  .#{$prefix}--tooltip__heading {
    @include type.type-style('productive-heading-01');

    margin-bottom: $spacing-03;
  }

  .#{$prefix}--tooltip--shown {
    display: block;
  }

  // Tooltip Definition
  /* begin legacy definition tooltip TODO: deprecate */
  // @include tooltip--definition--legacy;
  /* end legacy definition tooltip */

  .#{$prefix}--tooltip--definition.#{$prefix}--tooltip--a11y {
    // Wrapping element set to inline since the tooltip isn't contained within the trigger (affects center and end alignments)
    // Also allows for Definition Tooltip to be used within a paragraph of text as defined in the usage guidelines
    display: inline-flex;
  }

  // default buttons in Safari are adding a small margin, affecting tooltip placement
  .#{$prefix}--tooltip--definition button.#{$prefix}--tooltip--a11y {
    margin: 0;
  }

  // Definition CSS only tooltip
  .#{$prefix}--tooltip__trigger.#{$prefix}--tooltip__trigger--definition {
    @include type.type-style('label-01');

    border-bottom: layout.rem(1px) dotted $text-02;
    transition: border-color $duration--fast-02;
  }

  .#{$prefix}--tooltip__trigger.#{$prefix}--tooltip__trigger--definition:hover,
  .#{$prefix}--tooltip__trigger.#{$prefix}--tooltip__trigger--definition:focus {
    border-bottom-color: $interactive-04;
  }

  .#{$prefix}--tooltip__trigger.#{$prefix}--tooltip__trigger--definition.#{$prefix}--tooltip--top {
    @include tooltip--trigger('definition', 'top');
    @include tooltip--placement('definition', 'top', 'start');

    &.#{$prefix}--tooltip--align-start {
      @include tooltip--placement('definition', 'top', 'start');
    }

    &.#{$prefix}--tooltip--align-center {
      @include tooltip--placement('definition', 'top', 'center');
    }

    &.#{$prefix}--tooltip--align-end {
      @include tooltip--placement('definition', 'top', 'end');
    }
  }

  .#{$prefix}--tooltip__trigger.#{$prefix}--tooltip__trigger--definition.#{$prefix}--tooltip--bottom {
    @include tooltip--trigger('definition', 'bottom');
    @include tooltip--placement('definition', 'bottom', 'start');

    &.#{$prefix}--tooltip--align-start {
      @include tooltip--placement('definition', 'bottom', 'start');
    }

    &.#{$prefix}--tooltip--align-center {
      @include tooltip--placement('definition', 'bottom', 'center');
    }

    &.#{$prefix}--tooltip--align-end {
      @include tooltip--placement('definition', 'bottom', 'end');
    }
  }

  // Tooltip Icon

  /* begin tooltip icon (TODO: deprecate) */
  // @include tooltip--icon--legacy;
  /* end legacy tooltip icon */

  // Icon CSS only tooltip
  .#{$prefix}--tooltip__trigger {
    &:hover,
    &:focus {
      svg {
        fill: $icon-02;

        // Windows, Firefox HCM Fix
        @media screen and (-ms-high-contrast: active),
          screen and (prefers-contrast) {
          // `ButtonText` is a CSS2 system color to help improve colors in HCM
          fill: ButtonText;
        }
      }
    }
  }

  .#{$prefix}--tooltip__trigger.#{$prefix}--tooltip--top {
    @include tooltip--trigger('icon', 'top');
    @include tooltip--placement('icon', 'top', 'center');

    &.#{$prefix}--tooltip--align-start {
      @include tooltip--placement('icon', 'top', 'start');
    }

    &.#{$prefix}--tooltip--align-center {
      @include tooltip--placement('icon', 'top', 'center');
    }

    &.#{$prefix}--tooltip--align-end {
      @include tooltip--placement('icon', 'top', 'end');
    }
  }

  .#{$prefix}--tooltip__trigger.#{$prefix}--tooltip--right {
    @include tooltip--trigger('icon', 'right');
    @include tooltip--placement('icon', 'right', 'center');

    &.#{$prefix}--tooltip--align-start {
      @include tooltip--placement('icon', 'right', 'start');
    }

    &.#{$prefix}--tooltip--align-center {
      @include tooltip--placement('icon', 'right', 'center');
    }

    &.#{$prefix}--tooltip--align-end {
      @include tooltip--placement('icon', 'right', 'end');
    }
  }

  .#{$prefix}--tooltip__trigger.#{$prefix}--tooltip--bottom {
    @include tooltip--trigger('icon', 'bottom');
    @include tooltip--placement('icon', 'bottom', 'center');

    &.#{$prefix}--tooltip--align-start {
      @include tooltip--placement('icon', 'bottom', 'start');
    }

    &.#{$prefix}--tooltip--align-center {
      @include tooltip--placement('icon', 'bottom', 'center');
    }

    &.#{$prefix}--tooltip--align-end {
      @include tooltip--placement('icon', 'bottom', 'end');
    }
  }

  .#{$prefix}--tooltip__trigger.#{$prefix}--tooltip--left {
    @include tooltip--trigger('icon', 'left');
    @include tooltip--placement('icon', 'left', 'center');

    &.#{$prefix}--tooltip--align-start {
      @include tooltip--placement('icon', 'left', 'start');
    }

    &.#{$prefix}--tooltip--align-center {
      @include tooltip--placement('icon', 'left', 'center');
    }

    &.#{$prefix}--tooltip--align-end {
      @include tooltip--placement('icon', 'left', 'end');
    }
  }

  // Allow pointer events on tooltip when tooltip is visible
  .#{$prefix}--tooltip__trigger:not(.#{$prefix}--tooltip--hidden)
    .#{$prefix}--assistive-text {
    pointer-events: all;
  }
}
